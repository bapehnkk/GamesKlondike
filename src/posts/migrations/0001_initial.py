# Generated by Django 4.0.2 on 2022-03-24 11:18

import base.services
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('oauth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PostGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=200, unique=True)),
                ('Description', models.TextField(blank=True, max_length=10000, null=True)),
                ('ReleaseDate', models.DateTimeField()),
                ('PubDate', models.DateTimeField(auto_now_add=True)),
                ('ChangeDate', models.DateTimeField(auto_now=True)),
                ('Email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_game', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game Posts',
                'verbose_name_plural': 'Game Posts',
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tag', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Tags',
                'verbose_name_plural': 'TagsXD',
            },
        ),
        migrations.CreateModel(
            name='UserBookmarks',
            fields=[
                ('UserID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Bookmarks', models.ManyToManyField(to='posts.PostGame')),
            ],
            options={
                'verbose_name': 'User bookmarks',
                'verbose_name_plural': 'User bookmarks',
            },
        ),
        migrations.CreateModel(
            name='PostRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Stars', models.SmallIntegerField()),
                ('Email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_user', to=settings.AUTH_USER_MODEL)),
                ('PostID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_post', to='posts.postgame')),
            ],
        ),
        migrations.CreateModel(
            name='PostLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Link', models.URLField()),
                ('Text', models.CharField(max_length=255, unique=True)),
                ('Image', models.ImageField(upload_to=base.services.get_path_upload_post_image, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'gif', 'png']), base.services.validate_size_image])),
                ('PostID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_links', to='posts.postgame')),
            ],
            options={
                'verbose_name': 'Post links',
                'verbose_name_plural': 'Post links',
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image', models.ImageField(upload_to=base.services.get_path_upload_post_image, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'gif', 'png']), base.services.validate_size_image])),
                ('PostID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_images', to='posts.postgame')),
            ],
            options={
                'verbose_name': 'Post images',
                'verbose_name_plural': 'Post images',
            },
        ),
        migrations.AddField(
            model_name='postgame',
            name='Tags',
            field=models.ManyToManyField(to='posts.PostTag'),
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Text', models.TextField(max_length=2000, unique=True)),
                ('PubDate', models.DateTimeField(auto_now_add=True)),
                ('Email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_user', to=settings.AUTH_USER_MODEL)),
                ('PostID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_post', to='posts.postgame')),
            ],
            options={
                'verbose_name': 'Post Comments',
                'verbose_name_plural': 'Post Comments',
            },
        ),
        migrations.CreateModel(
            name='CommentLikeDislike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.BooleanField(default=False)),
                ('CommentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_dislike_comment', to='posts.postcomment')),
                ('Email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_dislike_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Comment like/dislike',
                'verbose_name_plural': 'Comment like/dislike',
            },
        ),
    ]
